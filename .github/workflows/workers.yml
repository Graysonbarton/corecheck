name: Build worker images
on:
  push:
    branches: [ "master" , "dev" ]
  workflow_dispatch:


jobs:
  build_sonar:
    name: sonar-worker
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./workers/sonar-worker
    steps:
    - name: Setup env variables
      run: |
        if [[ ${{ github.ref }} == 'refs/heads/dev' ]]; then
          echo "export SONAR_IMAGE=public.ecr.aws/i3s2n0b6/corecheck-sonar-worker-dev:latest" >> $GITHUB_ENV
        else
          echo "export SONAR_IMAGE=public.ecr.aws/i3s2n0b6/corecheck-sonar-worker:latest" >> $GITHUB_ENV
        fi
    - uses: actions/checkout@v3
    - name: Configure AWS CLI
      run: aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }} && aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }} && aws configure set region us-east-1
    - name: Login to ECR
      run: aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws/i3s2n0b6
    - name: Build the Docker image
      run: docker build . --tag $SONAR_IMAGE
    - name: Push to ECR
      run: docker push $SONAR_IMAGE

  build_bench:
    name: bench-worker
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./workers/bench-worker
    steps:
    - name: Setup env variables
      run: |
        if [[ ${{ github.ref }} == 'refs/heads/dev' ]]; then
          echo "export BENCH_IMAGE=public.ecr.aws/i3s2n0b6/corecheck-bench-worker-dev:latest" >> $GITHUB_ENV
        else
          echo "export BENCH_IMAGE=public.ecr.aws/i3s2n0b6/corecheck-bench-worker:latest" >> $GITHUB_ENV
        fi
    - uses: actions/checkout@v3
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Configure AWS CLI
      run: aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }} && aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }} && aws configure set region us-east-1
    - name: Login to ECR
      run: aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws/i3s2n0b6
    - name: Build and push
      id: docker_build
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./Dockerfile
        push: true
        platforms: linux/arm64
        tags: ${{ env.BENCH_IMAGE }}

  build_coverage:
    name: coverage-worker
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./workers/coverage-worker
    steps:
    - name: Setup env variables
      run: |
        if [[ ${{ github.ref }} == 'refs/heads/dev' ]]; then
          echo "export COVERAGE_IMAGE=public.ecr.aws/i3s2n0b6/corecheck-coverage-worker-dev:latest" >> $GITHUB_ENV
        else
          echo "export COVERAGE_IMAGE=public.ecr.aws/i3s2n0b6/corecheck-coverage-worker:latest" >> $GITHUB_ENV
        fi
    - uses: actions/checkout@v3
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Configure AWS CLI
      run: aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }} && aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }} && aws configure set region us-east-1
    - name: Login to ECR
      run: aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws/i3s2n0b6
    - name: Build and push
      id: docker_build
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./Dockerfile
        push: true
        platforms: linux/arm64
        tags: ${{ env.COVERAGE_IMAGE }}
